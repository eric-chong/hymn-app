"use strict";var ApplicationConfiguration=function(){var applicationModuleName="mean",applicationModuleVendorDependencies=["ngResource","ngAnimate","ui.router","ui.utils","mm.foundation","ui.select2","ui.components","ui.sortable"],registerModule=function(moduleName,dependencies){angular.module(moduleName,dependencies||[]),angular.module(applicationModuleName).requires.push(moduleName)};return{applicationModuleName:applicationModuleName,applicationModuleVendorDependencies:applicationModuleVendorDependencies,registerModule:registerModule}}();angular.module(ApplicationConfiguration.applicationModuleName,ApplicationConfiguration.applicationModuleVendorDependencies),angular.module(ApplicationConfiguration.applicationModuleName).config(["$locationProvider",function($locationProvider){$locationProvider.hashPrefix("!")}]),angular.element(document).ready(function(){"#_=_"===window.location.hash&&(window.location.hash="#!"),angular.bootstrap(document,[ApplicationConfiguration.applicationModuleName])}),ApplicationConfiguration.registerModule("articles"),ApplicationConfiguration.registerModule("core"),ApplicationConfiguration.registerModule("hymns"),angular.module("hymns").run(["uiSelect2Config",function(uiSelect2Config){uiSelect2Config.allowClear=!0}]),angular.module("ui.components",[]),ApplicationConfiguration.registerModule("users"),angular.module("articles").run(["Menus",function(Menus){Menus.addMenuItem("topbar","Articles","articles","link","/articles",!1,"user")}]),angular.module("articles").config(["$stateProvider",function($stateProvider){$stateProvider.state("listArticles",{url:"/articles",templateUrl:"modules/articles/views/list-articles.client.view.html"}).state("createArticle",{url:"/articles/create",templateUrl:"modules/articles/views/create-article.client.view.html"}).state("viewArticle",{url:"/articles/:articleId",templateUrl:"modules/articles/views/view-article.client.view.html"}).state("editArticle",{url:"/articles/:articleId/edit",templateUrl:"modules/articles/views/edit-article.client.view.html"})}]),angular.module("articles").controller("ArticlesController",["$scope","$stateParams","$location","Authentication","Articles",function($scope,$stateParams,$location,Authentication,Articles){$scope.authentication=Authentication,$scope.create=function(){var article=new Articles({title:this.title,content:this.content});article.$save(function(response){$location.path("articles/"+response._id),$scope.title="",$scope.content=""},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.remove=function(article){if(article){article.$remove();for(var i in $scope.articles)$scope.articles[i]===article&&$scope.articles.splice(i,1)}else $scope.article.$remove(function(){$location.path("articles")})},$scope.update=function(){var article=$scope.article;article.$update(function(){$location.path("articles/"+article._id)},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.find=function(){$scope.articles=Articles.query()},$scope.findOne=function(){$scope.article=Articles.get({articleId:$stateParams.articleId})}}]),angular.module("articles").factory("Articles",["$resource",function($resource){return $resource("articles/:articleId",{articleId:"@_id"},{update:{method:"PUT"}})}]),angular.module("core").config(["$stateProvider","$urlRouterProvider",function($stateProvider,$urlRouterProvider){$urlRouterProvider.otherwise("/")}]),angular.module("core").controller("HeaderController",["$scope","Authentication","AuthService","Menus",function($scope,Authentication,AuthService,Menus){$scope.authentication=Authentication,$scope.isCollapsed=!1,$scope.menu=Menus.getMenu("topbar"),$scope.toggleCollapsibleMenu=function(){$scope.isCollapsed=!$scope.isCollapsed},$scope.$on("$stateChangeSuccess",function(){$scope.isCollapsed=!1}),$scope.showUsersMenu=function(){return AuthService.hasAdminAuthorization($scope.authentication)},$scope.hasMasterAuthorization=function(){return AuthService.hasMasterAuthorization($scope.authentication)}}]),angular.module("core").controller("HomeController",["$scope","Authentication",function($scope,Authentication){$scope.authentication=Authentication}]),angular.module("core").service("Menus",[function(){this.defaultRoles=["*"],this.menus={};var shouldRender=function(user){if(!user)return this.isPublic;if(~this.roles.indexOf("*"))return!0;for(var userRoleIndex in user.roles)for(var roleIndex in this.roles)if(this.roles[roleIndex]===user.roles[userRoleIndex])return!0;return!1};this.validateMenuExistance=function(menuId){if(menuId&&menuId.length){if(this.menus[menuId])return!0;throw new Error("Menu does not exists")}throw new Error("MenuId was not provided")},this.getMenu=function(menuId){return this.validateMenuExistance(menuId),this.menus[menuId]},this.addMenu=function(menuId,isPublic,roles){return this.menus[menuId]={isPublic:isPublic||!1,roles:roles||this.defaultRoles,items:[],shouldRender:shouldRender},this.menus[menuId]},this.removeMenu=function(menuId){this.validateMenuExistance(menuId),delete this.menus[menuId]},this.addMenuItem=function(menuId,menuItemTitle,menuItemURL,menuItemType,menuItemUIRoute,isPublic,roles,position){return this.validateMenuExistance(menuId),this.menus[menuId].items.push({title:menuItemTitle,link:menuItemURL,menuItemType:menuItemType||"item",menuItemClass:menuItemType,uiRoute:menuItemUIRoute||"/"+menuItemURL,isPublic:null===isPublic||"undefined"==typeof isPublic?this.menus[menuId].isPublic:isPublic,roles:null===roles||"undefined"==typeof roles?this.menus[menuId].roles:roles,position:position||0,items:[],shouldRender:shouldRender}),this.menus[menuId]},this.addSubMenuItem=function(menuId,rootMenuItemURL,menuItemTitle,menuItemURL,menuItemUIRoute,isPublic,roles,position){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)this.menus[menuId].items[itemIndex].link===rootMenuItemURL&&this.menus[menuId].items[itemIndex].items.push({title:menuItemTitle,link:menuItemURL,uiRoute:menuItemUIRoute||"/"+menuItemURL,isPublic:null===isPublic||"undefined"==typeof isPublic?this.menus[menuId].items[itemIndex].isPublic:isPublic,roles:null===roles||"undefined"==typeof roles?this.menus[menuId].items[itemIndex].roles:roles,position:position||0,shouldRender:shouldRender});return this.menus[menuId]},this.removeMenuItem=function(menuId,menuItemURL){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)this.menus[menuId].items[itemIndex].link===menuItemURL&&this.menus[menuId].items.splice(itemIndex,1);return this.menus[menuId]},this.removeSubMenuItem=function(menuId,submenuItemURL){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)for(var subitemIndex in this.menus[menuId].items[itemIndex].items)this.menus[menuId].items[itemIndex].items[subitemIndex].link===submenuItemURL&&this.menus[menuId].items[itemIndex].items.splice(subitemIndex,1);return this.menus[menuId]},this.addMenu("topbar",!0)}]),angular.module("hymns").run(["Menus",function(Menus){Menus.addMenuItem("topbar","Publishers","publishers","link","/publishers",!0),Menus.addMenuItem("topbar","Hymn Books","hymnbooks","link","/hymnbooks",!0)}]),angular.module("hymns").config(["$stateProvider","$urlRouterProvider",function($stateProvider,$urlRouterProvider){$stateProvider.state("listPublishers",{url:"/publishers",templateUrl:"modules/hymns/views/list-publishers.client.view.html"}).state("listHymnbooksInPublisher",{url:"/publishers/:publisherId/hymnbooks",templateUrl:"modules/hymns/views/list-hymnbooks.client.view.html"}).state("listAllHymnBooks",{url:"/hymnbooks",templateUrl:"modules/hymns/views/list-hymnbooks.client.view.html"}).state("listHymnsInHymnbook",{url:"/hymnbooks/:hymnbookId/hymns",templateUrl:"modules/hymns/views/list-hymns.client.view.html"}).state("viewHymn",{url:"/hymns/:hymnId",templateUrl:"modules/hymns/views/view-hymn.client.view.html"}),$urlRouterProvider.otherwise("/hymnbooks")}]),angular.module("hymns").controller("PublishersController",["$scope","$modal","Authentication","AuthService","Publishers",function($scope,$modal,Authentication,AuthService,Publishers){function resetNewPublisherList(){$scope.newPublisher={names:[{lang:"zh",name:""},{lang:"en",name:""}]}}function validatePublisherForm(form,obj){obj.names[0].name||obj.names[1].name?form.name.$setValidity("oneRequired",!0):form.name.$setValidity("oneRequired",!1)}$scope.authentication=Authentication,$scope.show={newSection:!1},$scope.loadPublishers=function(){$scope.publishers=Publishers.query()},$scope.createPublisher=function(){if(validatePublisherForm($scope.newPublisherForm,$scope.newPublisher),$scope.newPublisherForm.$valid){var publisherToSave=new Publishers({names:[]});$scope.newPublisher.names.forEach(function(elem){void 0!==elem.name&&publisherToSave.names.push(elem)}),publisherToSave.$save(function(){resetNewPublisherList(),$scope.loadPublishers(),$scope.show.newSection=!1},function(){})}},$scope.delete=function(publisher){var modalInstance=$modal.open({templateUrl:"modules/hymns/views/modal-delete-item.client.view.html",controller:"DeleteItemController",windowClass:"delete-item-modal",resolve:{itemToDelete:function(){return publisher},deleteMsg:function(){return""}}});modalInstance.result.then(function(publisher){publisher.$delete(function(){$scope.loadPublishers()})})},$scope.edit=function(publisher){var modalInstance=$modal.open({templateUrl:"modules/hymns/views/modal-edit-publisher.client.view.html",controller:"EditItemController",windowClass:"edit-item-modal",resolve:{itemToEdit:function(){return publisher},selectLists:function(){return{}},checkboxItems:function(){return{}},validateFn:function(){return validatePublisherForm}}});modalInstance.result.then(function(publisher){publisher.$update(function(){$scope.loadPublishers()})})},$scope.cancelNew=function(){$scope.show.newSection=!1,resetNewPublisherList()},$scope.hasWriteAuthorization=function(item){return AuthService.hasWriteAuthorization($scope.authentication,item)},resetNewPublisherList()}]).controller("HymnbooksController",["$scope","$state","$stateParams","$timeout","$modal","Authentication","AuthService","Publishers","Hymnbooks","HymnConfig",function($scope,$state,$stateParams,$timeout,$modal,Authentication,AuthService,Publishers,Hymnbooks,HymnConfig){function resetNewHymnbookObj(){$scope.newHymnbook={names:[{lang:"zh",name:""},{lang:"en",name:""}],lyricLangs:[]}}function validateHymnbookForm(form,obj){!obj.names||obj.names[0].name||obj.names[1].name?form.name.$setValidity("oneRequired",!0):form.name.$setValidity("oneRequired",!1)}$scope.currentState=$state.current,$scope.authentication=Authentication,$scope.show={newSection:!1,filterSection:!1},$scope.search={langs:[]},$scope.parentInfo={parent:"publishers",child:"hymnbooks",title:"Publisher"},$scope.lyricLangs=HymnConfig.getConfig().lyricLangs,$scope.loadHymnbooks=function(){"listHymnbooksInPublisher"===$scope.currentState.name?($scope.parentInfo.obj=Publishers.get({publisherId:$stateParams.publisherId}),$scope.hymnbooks=Hymnbooks.query({publisherId:$stateParams.publisherId})):($scope.hymnbooks=Hymnbooks.getAll(),$scope.unknownHymnbook=Hymnbooks.getUnknownHymnbook(),$scope.publishersList=Publishers.query())},$scope.createHymnbook=function(){if(validateHymnbookForm($scope.newHymnbookForm,$scope.newHymnbook),$scope.newHymnbookForm.$valid){var hymnbookToSave;hymnbookToSave=new Hymnbooks($stateParams.publisherId||$scope.newHymnbook.publisherId?{publisherId:$stateParams.publisherId||$scope.newHymnbook.publisherId,names:[],lyricLangs:[]}:{names:[],lyricLangs:[]}),$scope.newHymnbook.names.forEach(function(elem){void 0!==elem.name&&hymnbookToSave.names.push(elem)}),$scope.newHymnbook.year&&(hymnbookToSave.year=$scope.newHymnbook.year),hymnbookToSave.lyricLangs=angular.copy($scope.newHymnbook.lyricLangs),$stateParams.publisherId||$scope.newHymnbook.publisherId?hymnbookToSave.$save(function(){resetNewHymnbookObj(),$scope.loadHymnbooks(),$scope.show.newSection=!1},function(){}):hymnbookToSave.$saveWithNoPublisher(function(){resetNewHymnbookObj(),$scope.loadHymnbooks(),$scope.show.newSection=!1},function(){})}},$scope.delete=function(hymnbook){var modalInstance=$modal.open({templateUrl:"modules/hymns/views/modal-delete-item.client.view.html",controller:"DeleteItemController",windowClass:"delete-item-modal",resolve:{itemToDelete:function(){return hymnbook},deleteMsg:function(){return""}}});modalInstance.result.then(function(hymnbook){hymnbook.$delete(function(){$scope.loadHymnbooks()})})},$scope.edit=function(hymnbook){$scope.publishersList||($scope.publishersList=Publishers.query());var modalInstance=$modal.open({templateUrl:"modules/hymns/views/modal-edit-hymnbook.client.view.html",controller:"EditItemController",windowClass:"edit-item-modal",resolve:{itemToEdit:function(){return hymnbook},selectLists:function(){return{publishers:$scope.publishersList}},checkboxItems:function(){return{lyricLangs:$scope.lyricLangs}},validateFn:function(){return validateHymnbookForm}}});modalInstance.result.then(function(hymnbook){hymnbook.$update(function(){$scope.loadHymnbooks()})})},$scope.cancelNew=function(){$scope.show.newSection=!1,resetNewHymnbookObj()},$scope.hasWriteAuthorization=function(item){return AuthService.hasWriteAuthorization($scope.authentication,item)},resetNewHymnbookObj()}]).controller("HymnsController",["$scope","$state","$stateParams","$timeout","$modal","Authentication","AuthService","Publishers","Hymnbooks","Hymns","HymnConfig",function($scope,$state,$stateParams,$timeout,$modal,Authentication,AuthService,Publishers,Hymnbooks,Hymns,HymnConfig){function resetNewHymnObj(){$scope.newHymn={names:[{lang:"zh",name:""},{lang:"en",name:""}],lyricLangs:[]},$stateParams.hymnbookId&&"unknown"!==$stateParams.hymnbookId&&($scope.newHymn.hymnbookId=$stateParams.hymnbookId,$scope.newHymn.publisherId=$scope.parentInfo.obj.publisher._id,$scope.newHymn.lyricLangs=angular.copy($scope.parentInfo.obj.lyricLangs))}function validateHymnForm(form,obj){obj.names[0].name||obj.names[1].name?form.name.$setValidity("oneRequired",!0):form.name.$setValidity("oneRequired",!1)}$scope.currentState=$state.current,$scope.authentication=Authentication,$scope.show={newSection:!1},$scope.search={langs:[]},$scope.parentInfo={parent:"hymnbooks",child:"hymns",title:"Hymn Book"},$scope.lyricLangs=HymnConfig.getConfig().lyricLangs,$scope.loadHymns=function(){$scope.hymnbooksList=Hymnbooks.getAll(),$scope.publishersList=Publishers.query(),"listHymnsInHymnbook"===$scope.currentState.name&&($scope.parentInfo.obj=Hymnbooks.getOne({hymnbookId:$stateParams.hymnbookId}),$scope.hymns=Hymns.query({hymnbookId:$stateParams.hymnbookId}))},$scope.createHymn=function(){if(validateHymnForm($scope.newHymnForm,$scope.newHymn),$scope.newHymnForm.$valid){var hymnToSave=new Hymns({names:[],lyricLangs:[]});hymnToSave.hymnbookId=$scope.newHymn.hymnbookId?$scope.newHymn.hymnbookId:"unknown",$scope.newHymn.names.forEach(function(elem){void 0!==elem.name&&hymnToSave.names.push(elem)}),hymnToSave.lyricLangs=angular.copy($scope.newHymn.lyricLangs),hymnToSave.hymnbookIndex=$scope.newHymn.hymnbookIndex,hymnToSave.$save(function(){resetNewHymnObj(),$scope.loadHymns(),$scope.show.newSection=!1},function(){})}},$scope.delete=function(hymn){var modalInstance=$modal.open({templateUrl:"modules/hymns/views/modal-delete-item.client.view.html",controller:"DeleteItemController",windowClass:"delete-item-modal",resolve:{itemToDelete:function(){return hymn},deleteMsg:function(){return""}}});modalInstance.result.then(function(hymn){hymn.$delete(function(){$scope.loadHymns()})})},$scope.edit=function(hymn){$scope.publishersList||($scope.publishersList=Publishers.query()),$scope.hymnbooksList||($scope.hymnbooksList=Hymnbooks.getAll());var modalInstance=$modal.open({templateUrl:"modules/hymns/views/modal-edit-hymn.client.view.html",controller:"EditItemController",windowClass:"edit-item-modal",resolve:{itemToEdit:function(){return hymn},selectLists:function(){return{hymnbooks:$scope.hymnbooksList}},checkboxItems:function(){return{lyricLangs:$scope.lyricLangs}},validateFn:function(){return validateHymnForm}}});modalInstance.result.then(function(hymn){hymn.$update(function(){$scope.loadHymns()})})},$scope.cancelNew=function(){$scope.show.newSection=!1,resetNewHymnObj()},$scope.hasWriteAuthorization=function(item){return AuthService.hasWriteAuthorization($scope.authentication,item)},$scope.$watchCollection("[hymnbooksList.$resolved, publishersList.$resolved, parentInfo.obj.$resolved]",function(newValues){_.all(newValues,_.identity)&&$timeout(function(){resetNewHymnObj()},!0)})}]).controller("HymnController",["$scope","$state","$stateParams","$modal","Authentication","AuthService","Publishers","Hymnbooks","Hymns","HymnConfig","HymnClipboard",function($scope,$state,$stateParams,$modal,Authentication,AuthService,Publishers,Hymnbooks,Hymns,HymnConfig,HymnClipboard){function setLangsAvailable(){var lyricsListLangs=[];$scope.hymn.lyricsList.forEach(function(elem){lyricsListLangs.push(elem.langs)}),$scope.langsAvailable=_.difference($scope.hymn.lyricLangs,_.flatten(lyricsListLangs)).sort()}function resetNewLyrics(){$scope.newLyrics={lyricLangs:[]}}function resetNewVerse(index){$scope.newVerse[index]={lines:[]}}function convertLinesToView(linesArray){return _.isArray(linesArray)?linesArray.join("\n"):linesArray}function convertLinesToModel(linesString){return linesString.split("\n")}function convertVerseToViewModel(verseObj){return{verse:verseObj.verse,lines:convertLinesToView(verseObj.lines),editMode:!1}}var selectedTab=0;$scope.currentState=$state.current,$scope.authentication=Authentication,$scope.show={addLyrics:!1},$scope.newLyrics={lyricLangs:[]},$scope.newVerse=[],$scope.langsAvailable=[],$scope.lyricsVerseViewModel=[],$scope.addLyricsSet=function(){$scope.hymn.$resolved&&$scope.newLyrics.lyricLangs.length>0&&($scope.hymn.lyricsList.push({langs:angular.copy($scope.newLyrics.lyricLangs),lyrics:[],slideIndexes:[]}),$scope.hymn.$update(function(){$scope.loadHymn(),resetNewLyrics()}))},$scope.parentInfo={parent:"hymnbooks",child:"hymns",title:"Hymn Book"},$scope.lyricLangs=HymnConfig.getConfig().lyricLangs,$scope.loadHymn=function(){$scope.hymn=Hymns.getOne({hymnId:$stateParams.hymnId}),$scope.allLabels=Hymns.allLabels()},$scope.addLabel=function(label){-1===$scope.hymn.labels.indexOf(label)&&($scope.hymn.labels.push(label),$scope.hymn.$update(function(){})),$scope.newLabel=""},$scope.removeLabel=function(label){var labelIndex=$scope.hymn.labels.indexOf(label);labelIndex>-1&&($scope.hymn.labels.splice(labelIndex,1),$scope.hymn.$update(function(){$scope.newLabel=void 0,$scope.loadHymn()}))},$scope.addLyricVerse=function(index){$scope.newVerse[index]&&($scope.hymn.lyricsList[index].lyrics.push({verse:$scope.newVerse[index].verse,lines:convertLinesToModel($scope.newVerse[index].lines)}),$scope.hymn.lyricsList[index].lyrics=_.sortBy($scope.hymn.lyricsList[index].lyrics,"verse"),$scope.hymn.$update(function(){$scope.lyricsVerseViewModel[index]&&($scope.lyricsVerseViewModel[index].push({verse:$scope.newVerse[index].verse,lines:$scope.newVerse[index].lines}),$scope.lyricsVerseViewModel[index]=_.sortBy($scope.lyricsVerseViewModel[index],"verse")),resetNewVerse(index)}))},$scope.cancelAddVerse=function(index){resetNewVerse(index)},$scope.updateLyricVerse=function(lyricSetIndex,verseIndex){var lyricSet=$scope.hymn.lyricsList[lyricSetIndex],verseViewModel=$scope.lyricsVerseViewModel[lyricSetIndex][verseIndex];lyricSet.lyrics&&lyricSet.lyrics.length>verseIndex&&(lyricSet.lyrics[verseIndex].verse=verseViewModel.verse,lyricSet.lyrics[verseIndex].lines=convertLinesToModel(verseViewModel.lines),$scope.hymn.$update(function(){verseViewModel.editMode=!1}))},$scope.cancelEditVerse=function(lyricSet,verseViewModel,index){lyricSet.lyrics&&lyricSet.lyrics.length>index&&(verseViewModel.verse=lyricSet.lyrics[index].verse,verseViewModel.lines=convertLinesToView(lyricSet.lyrics[index].lines),verseViewModel.editMode=!1)},$scope.removeVerse=function(lyricSetIndex,verseIndex){var modalInstance=$modal.open({templateUrl:"modules/hymns/views/modal-delete-item.client.view.html",controller:"DeleteItemController",windowClass:"delete-item-modal",resolve:{itemToDelete:function(){return{lyricSetIndex:lyricSetIndex,verseIndex:verseIndex}},deleteMsg:function(){return"Confirm delete this verse?"}}});modalInstance.result.then(function(lyricsIndexObj){$scope.hymn.lyricsList[lyricsIndexObj.lyricSetIndex]&&$scope.hymn.lyricsList[lyricsIndexObj.lyricSetIndex].lyrics.length>lyricsIndexObj.verseIndex&&$scope.lyricsVerseViewModel[lyricsIndexObj.lyricSetIndex]&&$scope.lyricsVerseViewModel[lyricsIndexObj.lyricSetIndex].length>lyricsIndexObj.verseIndex&&($scope.hymn.lyricsList[lyricsIndexObj.lyricSetIndex].lyrics.splice(lyricsIndexObj.verseIndex,1),$scope.hymn.$update(function(){$scope.lyricsVerseViewModel[lyricsIndexObj.lyricSetIndex].splice(lyricsIndexObj.verseIndex,1)}))})},$scope.setHymnClipboard=function(lyricSetIndex,verseIndex){$scope.lyricsVerseViewModel[lyricSetIndex]&&$scope.lyricsVerseViewModel[lyricSetIndex].length>verseIndex&&HymnClipboard.set($scope.lyricsVerseViewModel[lyricSetIndex][verseIndex].lines)},$scope.onStartDrag=function(){$scope.startDrag=!0},$scope.onStopDrag=function(){$scope.startDrag=!1},$scope.hasAuthorization=function(item){return $scope.authentication.user&&$scope.authentication.user._id===item.user._id},$scope.hasWriteAuthorization=function(item){return AuthService.hasWriteAuthorization($scope.authentication,item)},$scope.updateSelectedTab=function(){$scope.verseIndexSelected=-1,$scope.hymn.lyricsList.forEach(function(elem,index){return elem.active?void(selectedTab=index):void 0})},$scope.saveHymn=function(){$scope.hymn.$update(function(){})},$scope.selectVerseFromArrangement=function(indexFromArrangement){$scope.verseIndexSelected=$scope.verseIndexSelected===indexFromArrangement?-1:indexFromArrangement},$scope.removeVerseFromArrangement=function(){$scope.hymn.defaultArrangement.length>$scope.verseIndexSelected&&$scope.hymn.defaultArrangement.splice($scope.verseIndexSelected,1),$scope.saveHymn()},$scope.addVerseToArrangement=function(verse){$scope.hymn.defaultArrangement.push(verse),$scope.saveHymn()},$scope.defaultArrangementSortableOptions={update:function(){$scope.saveHymn()}},$scope.$watch("hymn.$resolved",function(){$scope.hymn.$resolved&&($scope.parentInfo.obj=$scope.hymn.hymnbook,$scope.hymn.lyricsList.forEach(function(elem){var lyricsViewModel=[];elem.lyrics&&elem.lyrics.length>0&&elem.lyrics.forEach(function(elem){lyricsViewModel.push(convertVerseToViewModel(elem))}),$scope.lyricsVerseViewModel.push(lyricsViewModel),$scope.newVerse.push({lines:[]})}),setLangsAvailable())}),$scope.$watch("hymn",function(){selectedTab>0&&$scope.hymn.lyricsList&&$scope.hymn.lyricsList.length>selectedTab&&($scope.hymn.lyricsList[selectedTab].active=!0)},!0),resetNewLyrics()}]).controller("DeleteItemController",["$scope","$modalInstance","itemToDelete","deleteMsg",function($scope,$modalInstance,itemToDelete,deleteMsg){$scope.itemToDelete=itemToDelete,$scope.deleteMsg=deleteMsg,$scope.confirm=function(){$modalInstance.close($scope.itemToDelete)},$scope.cancel=function(){$modalInstance.dismiss("cancel")}}]).controller("EditItemController",["$scope","$modalInstance","itemToEdit","selectLists","checkboxItems","validateFn",function($scope,$modalInstance,itemToEdit,selectLists,checkboxItems,validateFn){$scope.itemToEdit=itemToEdit,$scope.selectLists=selectLists,$scope.checkboxItems=checkboxItems,$scope.save=function(editForm){validateFn(editForm,$scope.itemToEdit),editForm.$valid&&$modalInstance.close($scope.itemToEdit)},$scope.cancel=function(){$modalInstance.dismiss("cancel")}}]),angular.module("hymns").directive("hymnCopyClipboard",["HymnClipboard",function(HymnClipboard){return{restrict:"A",link:function(){$(document).on("keydown",function(event){var clipValue=HymnClipboard.get();clipValue&&(event.ctrlKey||event.metaKey)&&($(event.target).is("input:visible,textarea:visible")||_.defer(function(){var $clipboardContainer=$("#lyrics-clipboard-container");$clipboardContainer.empty().show(),$('<textarea id="clipboard"></textarea>').val(clipValue).appendTo($clipboardContainer).focus().select()}))}),$(document).on("keyup",function(event){$(event.target).is("#clipboard")&&$("#lyrics-clipboard-container").empty().hide()})}}}]).directive("hymnZeroClipboard",[function(){return{retrict:"A",link:function(scope,elem){new ZeroClipboard(elem)}}}]).directive("listEntryExpand",["$window",function($window){return{link:function(scope,elem){function adjustWidth(){window.innerWidth-95;elem.css("width",window.innerWidth+"px")}function setLeftOffsetPos(){elem.css("left",-Math.abs(elem.offset().left))}angular.element($window).bind("resize",function(){adjustWidth(),setLeftOffsetPos(),scope.$apply()}),adjustWidth(),setLeftOffsetPos()}}}]),angular.module("hymns").filter("lyricLangsCssClass",function(){return function(array){return _.isArray(array)?array.toString().replace(/,/g," "):""}}).filter("concatNames",function(){return function(names){var fullName="";return _.isArray(names)&&names.forEach(function(elem,index){index>0&&elem.name&&(fullName=fullName.concat(" - ")),fullName=fullName.concat(elem.name)}),fullName}}).filter("displayLangs",function(){return function(langs){if(!_.isArray(langs))return langs;var displayLangs="";return langs.forEach(function(elem,index){switch(index>0&&void 0!==elem&&(displayLangs=displayLangs.concat(" - ")),elem){case"en":displayLangs=displayLangs.concat("English");break;case"zh-CAN":displayLangs=displayLangs.concat("粵語");break;case"zh-MAN":displayLangs=displayLangs.concat("國語")}}),displayLangs}}).filter("filterHymnOrHymnbook",function(){return function(array,searchObj){if(!_.isArray(array))return array;if(!searchObj)return array;if(!searchObj.name&&!searchObj.publisherId&&!searchObj.hymnbookId&&0===searchObj.langs.length)return array;var matchedArray=[];return array.forEach(function(elem){var matched=!0;if(searchObj.name&&elem.names&&_.isArray(elem.names)){var nameMatched=!1;elem.names.forEach(function(nameObj){nameObj.name.toLowerCase().indexOf(searchObj.name.toLowerCase())>-1&&(nameMatched=!0)}),matched=nameMatched}searchObj.publisherId&&elem.publisher&&elem.publisher._id?elem.publisher._id!==searchObj.publisherId&&(matched=!1):searchObj.publisherId&&!elem.publisher&&(matched=!1),searchObj.hymnbookId&&elem.hymnbook&&elem.hymnbook._id?elem.hymnbook._id!==searchObj.hymnbookId&&(matched=!1):searchObj.hymnbookId&&!elem.hymnbook&&(matched=!1),searchObj.langs.length!==_.intersection(searchObj.langs,elem.lyricLangs).length&&(matched=!1),matched&&matchedArray.push(elem)}),matchedArray}}),angular.module("hymns").factory("Publishers",["$resource",function($resource){return $resource("publishers/:publisherId",{publisherId:"@_id"},{update:{method:"PUT"},getHymnbooksCount:{method:"GET",url:"publishers/:publisherId/hymbooksCount"}})}]).factory("Hymnbooks",["$resource",function($resource){return $resource("publishers/:publisherId/hymnbooks/:hymnbookId",{publisherId:"@publisherId",hymnbookId:"@_id"},{update:{method:"PUT",url:"hymnbooks/:hymnbookId"},"delete":{method:"DELETE",url:"hymnbooks/:hymnbookId"},getAll:{method:"GET",url:"hymnbooks",isArray:!0},getOne:{method:"GET",url:"hymnbooks/:hymnbookId"},getHymnsCount:{method:"GET",url:"hymnbooks/:hymnbookId/hymnsCount"},getUnknownHymnbook:{method:"GET",url:"hymnbooks/unknown/hymnsCount"},saveWithNoPublisher:{method:"POST",url:"hymnbooks"}})}]).factory("Hymns",["$resource",function($resource){return $resource("hymnbooks/:hymnbookId/hymns/:hymnId",{hymnbookId:"@hymnbookId",hymnId:"@_id"},{update:{method:"PUT",url:"hymns/:hymnId"},"delete":{method:"DELETE",url:"hymns/:hymnId"},getOne:{method:"GET",url:"hymns/:hymnId"},allLabels:{method:"GET",url:"hymn/labels",isArray:!0}})}]).factory("HymnConfig",[function(){var config={lyricLangs:{values:["en","zh-CAN","zh-MAN"],displayNames:{en:"English","zh-CAN":"Cantonese","zh-MAN":"Mandarin"}}};return{getConfig:function(){return config}}}]).factory("HymnClipboard",[function(){var clipValue="";return{get:function(){return clipValue},set:function(value){clipValue=value}}}]),angular.module("ui.components").directive("uiToggleBtn",function(){return{restrict:"E",replace:!0,scope:{uiToggleBtnValue:"=",uiToggleBtnLabel:"@"},template:'<div class="ui-toggle"><div class="ui-toggle-btn" ng-class="{on: uiToggleBtnValue, off: !uiToggleBtnValue}" ng-click="uiToggleBtnValue=!uiToggleBtnValue"><div class="toggler"></div></div><div class="ui-toggle-label">{{uiToggleBtnLabel}}</div></div>'}}).directive("uiGroupCheckbox",function(){return{restrict:"E",replace:!0,scope:{uiGroupCheckboxCssClass:"@",uiGroupCheckboxModel:"=",uiGroupCheckboxValues:"=",uiGroupCheckboxLabels:"="},template:'<div class="ui-group-checkbox {{uiGroupCheckboxCssClass}}"><div class="ui-checkbox" ng-repeat="item in uiGroupCheckboxValues track by $index"><span class="fa-stack" ng-click="select(item)"><i class="fa fa-circle-thin fa-stack-2x" ng-class="{checked: isChecked(item)}"></i><i class="fa fa-check fa-stack-1x" ng-show="isChecked(item)"></i></span><div class="ui-group-checkbox-label" ng-click="select(item)">{{uiGroupCheckboxLabels[item]}}</div></div></div>',link:function(scope){scope.isChecked=function(item){return _.isArray(scope.uiGroupCheckboxModel)&&scope.uiGroupCheckboxModel.indexOf(item)>-1},scope.select=function(item){if(_.isArray(scope.uiGroupCheckboxModel)){var itemIndex=scope.uiGroupCheckboxModel.indexOf(item);-1===itemIndex?scope.uiGroupCheckboxModel.push(item):scope.uiGroupCheckboxModel.splice(itemIndex,1)}}}}}).directive("uiIconBtn",function(){return{restrict:"E",replace:!0,scope:{uiIconBtnIconClass:"@",uiIconBtnCssClass:"@",uiIconBtnClass:"@",uiIconBtnOnClick:"&",uiIconBtnTooltip:"@",uiIconBtnTooltipPlacement:"@"},template:'<div class="ui-icon-btn {{uiIconBtnCssClass}}" ng-click="uiIconBtnOnClick()"><span class="fa-stack {{uiIconBtnClass}}" tooltip="{{uiIconBtnTooltip}}" tooltip-placement="{{uiIconBtnTooltipPlacement}}"><i class="fa fa-circle-thin fa-stack-2x"></i><i class="fa fa-{{uiIconBtnIconClass}} fa-stack-1x"></i></span></div>'}}).directive("uiBtn",function(){return{restrict:"E",replace:!0,scope:{uiBtnType:"@",uiBtnIconClass:"@",uiBtnLabel:"@",uiBtnCssClass:"@",uiBtnBtnCssClass:"@",uiBtnOnClick:"&",uiBtnTooltip:"@",uiBtnTooltipPlacement:"@"},template:'<div class="ui-btn {{uiBtnCssClass}}"><button type="{{uiBtnType}}" class="{{uiBtnBtnCssClass}}" ng-click="uiBtnOnClick()" tooltip="{{uiBtnTooltip}}" tooltip-placement="{{uiBtnTooltipPlacement}}"><i class="fa fa-{{uiBtnIconClass}}" ng-show="uiBtnIconClass"/> {{uiBtnLabel}}</button></div>'}}),angular.module("users").config(["$httpProvider",function($httpProvider){$httpProvider.interceptors.push(["$q","$location","Authentication",function($q,$location,Authentication){return{responseError:function(rejection){switch(rejection.status){case 401:Authentication.user=null,$location.path("signin");break;case 403:}return $q.reject(rejection)}}}])}]),angular.module("users").config(["$stateProvider",function($stateProvider){$stateProvider.state("profile",{url:"/settings/profile",templateUrl:"modules/users/views/settings/edit-profile.client.view.html"}).state("password",{url:"/settings/password",templateUrl:"modules/users/views/settings/change-password.client.view.html"}).state("accounts",{url:"/settings/accounts",templateUrl:"modules/users/views/settings/social-accounts.client.view.html"}).state("signup",{url:"/signup",templateUrl:"modules/users/views/authentication/signup.client.view.html"}).state("addUser",{url:"/users/add",templateUrl:"modules/users/views/authentication/create-user.client.view.html"}).state("signin",{url:"/signin",templateUrl:"modules/users/views/authentication/signin.client.view.html"}).state("forgot",{url:"/password/forgot",templateUrl:"modules/users/views/password/forgot-password.client.view.html"}).state("reset-invlaid",{url:"/password/reset/invalid",templateUrl:"modules/users/views/password/reset-password-invalid.client.view.html"}).state("reset-success",{url:"/password/reset/success",templateUrl:"modules/users/views/password/reset-password-success.client.view.html"}).state("reset",{url:"/password/reset/:token",templateUrl:"modules/users/views/password/reset-password.client.view.html"}).state("manageOrgs",{url:"/orgs",templateUrl:"modules/users/views/orgs/manage-orgs.client.view.html"}).state("listUsers",{url:"/users",templateUrl:"modules/users/views/settings/list-users.client.view.html"})
}]),angular.module("users").controller("SigninController",["$scope","$http","$location","Authentication",function($scope,$http,$location,Authentication){$scope.authentication=Authentication,$scope.authentication.user&&$location.path("/"),$scope.signin=function(){$http.post("/auth/signin",$scope.credentials).success(function(response){$scope.authentication.user=response,$location.path("/")}).error(function(response){$scope.error=response.message})}}]).controller("AddUserController",["$scope","$http","$location","Authentication","Orgs","UserUtil",function($scope,$http,$location,Authentication,Orgs,UserUtil){function allowAddUser(){return $scope.authentication.user&&(_.indexOf($scope.authentication.user.roles,"admin")>-1||_.indexOf($scope.authentication.user.roles,"master")>-1)}$scope.authentication=Authentication,$scope.credentials={roles:[]},$scope.orgs=[],$scope.authentication.user&&!allowAddUser()&&$location.path("/"),_.indexOf($scope.authentication.user.roles,"master")>-1?$scope.orgs=Orgs.query():$scope.credentials.orgId=$scope.authentication.user.org,$scope.availableRoles=UserUtil.getRoles($scope.authentication.user.roles),$scope.addUser=function(){$http.post("/auth/signup",$scope.credentials).success(function(response){$scope.authentication.user=response,$location.path("/")}).error(function(response){$scope.error=response.message})},$scope.showRolesCheckbox=function(){return $scope.authentication.user&&$scope.authentication.user.roles&&($scope.authentication.user.roles.indexOf("admin")>-1||$scope.authentication.user.roles.indexOf("master")>-1)}}]),angular.module("users").controller("OrgsController",["$scope","$location","$modal","Orgs","Authentication","AuthService",function($scope,$location,$modal,Orgs,Authentication,AuthService){function resetNewOrgList(){$scope.newOrg={}}function validateOrgForm(form,obj){void 0===obj.orgCode||""===obj.orgCode?form.orgCode.$setValidity("required",!1):form.orgCode.$setValidity("required",!0),void 0===obj.fullName||""===obj.fullName?form.fullName.$setValidity("required",!1):form.fullName.$setValidity("required",!0)}$scope.authentication=Authentication,$scope.authentication.user&&AuthService.hasMasterAuthorization($scope.authentication)||$location.path("/"),$scope.show={newSection:!1},$scope.loadOrgs=function(){$scope.orgs=Orgs.query()},$scope.createOrg=function(){if(validateOrgForm($scope.newOrgForm,$scope.newOrg),$scope.newOrgForm.$valid){var orgToSave=new Orgs({orgCode:$scope.newOrg.orgCode,fullName:$scope.newOrg.fullName});orgToSave.$save(function(){resetNewOrgList(),$scope.loadOrgs(),$scope.show.newSection=!1},function(){})}},$scope.delete=function(org){var modalInstance=$modal.open({templateUrl:"modules/hymns/views/modal-delete-item.client.view.html",controller:"DeleteItemController",windowClass:"delete-item-modal",resolve:{itemToDelete:function(){return org},deleteMsg:function(){return"Confirm Delete Org?"}}});modalInstance.result.then(function(org){org.$delete(function(){$scope.loadOrgs()})})},$scope.cancelNew=function(){$scope.show.newSection=!1,resetNewOrgList()},$scope.saveOrg=function(org){org.$update(function(){})},$scope.hasWriteAuthorization=function(item){return AuthService.hasWriteAuthorization($scope.authentication,item)},resetNewOrgList()}]),angular.module("users").controller("PasswordController",["$scope","$stateParams","$http","$location","Authentication",function($scope,$stateParams,$http,$location,Authentication){$scope.authentication=Authentication,$scope.authentication.user&&$location.path("/"),$scope.askForPasswordReset=function(){$scope.success=$scope.error=null,$http.post("/auth/forgot",$scope.credentials).success(function(response){$scope.credentials=null,$scope.success=response.message}).error(function(response){$scope.credentials=null,$scope.error=response.message})},$scope.resetUserPassword=function(){$scope.success=$scope.error=null,$http.post("/auth/reset/"+$stateParams.token,$scope.passwordDetails).success(function(response){$scope.passwordDetails=null,Authentication.user=response,$location.path("/password/reset/success")}).error(function(response){$scope.error=response.message})}}]),angular.module("users").controller("SettingsController",["$scope","$http","$location","Users","Authentication","UserUtil",function($scope,$http,$location,Users,Authentication,UserUtil){$scope.user=Authentication.user,$scope.user||$location.path("/"),$scope.availableRoles=UserUtil.getRoles($scope.user.roles),$scope.hasConnectedAdditionalSocialAccounts=function(){for(var i in $scope.user.additionalProvidersData)return!0;return!1},$scope.hasAdminAuthentication=function(){return $scope.user&&(_.indexOf($scope.user.roles,"admin")>-1||_.indexOf($scope.user.roles,"master")>-1)},$scope.isConnectedSocialAccount=function(provider){return $scope.user.provider===provider||$scope.user.additionalProvidersData&&$scope.user.additionalProvidersData[provider]},$scope.removeUserSocialAccount=function(provider){$scope.success=$scope.error=null,$http.delete("/users/accounts",{params:{provider:provider}}).success(function(response){$scope.success=!0,$scope.user=Authentication.user=response}).error(function(response){$scope.error=response.message})},$scope.updateUserProfile=function(isValid){if(isValid){$scope.success=$scope.error=null;var user=new Users($scope.user);user.$update(function(response){$scope.success=!0,Authentication.user=response},function(response){$scope.error=response.data.message})}else $scope.submitted=!0},$scope.changeUserPassword=function(){$scope.success=$scope.error=null,$http.post("/users/password",$scope.passwordDetails).success(function(){$scope.success=!0,$scope.passwordDetails=null}).error(function(response){$scope.error=response.message})}}]).controller("UsersController",["$scope","$http","$location","Users","Authentication","AuthService","UserUtil",function($scope,$http,$location,Users,Authentication,AuthService,UserUtil){function closeOthers(user){$scope.users.forEach(function(u){u._id!==user._id&&u.editShow&&(u.editShow=!1)})}$scope.authentication=Authentication,$scope.authentication.user||$location.path("/"),$scope.availableRoles=UserUtil.getRoles($scope.authentication.user.roles),AuthService.hasMasterAuthorization($scope.authentication)?$scope.users=Users.query():AuthService.hasAdminAuthorization($scope.authentication)&&$scope.authentication.user.org?$scope.users=Users.getUsersInOrg({orgId:$scope.authentication.user.org}):$location.path("/"),$scope.hasAdminAuthentication=function(){return AuthService.hasAdminAuthorization($scope.authentication)},$scope.toggleEditSection=function(user){user.editShow=!user.editShow,user.editShow&&closeOthers(user)},$scope.saveUser=function(user){user.$updateOneUser({userId:user._id},function(){$scope.success=!0},function(response){$scope.error=response.data.message})}}]),angular.module("users").factory("Authentication",[function(){var _this=this;return _this._data={user:window.user},_this._data}]).factory("AuthService",[function(){return{hasWriteAuthorization:function(auth,item){return auth.user&&(auth.user._id===item.user._id||this.hasAdminAuthorization(auth))},hasAdminAuthorization:function(auth){return auth.user&&(_.indexOf(auth.user.roles,"admin")>-1||_.indexOf(auth.user.roles,"master")>-1)},hasMasterAuthorization:function(auth){return auth.user&&_.indexOf(auth.user.roles,"master")>-1}}}]),angular.module("users").factory("Orgs",["$resource",function($resource){return $resource("orgs/:orgId",{orgId:"@_id"},{update:{method:"PUT"}})}]),angular.module("users").factory("Users",["$resource",function($resource){return $resource("users",{},{update:{method:"PUT"},getUsersInOrg:{method:"GET",url:"orgs/:orgId/users",isArray:!0},updateOneUser:{method:"PUT",url:"users/:userId"}})}]).factory("UserUtil",[function(){return{getRoles:function(currentUserRoles){var roles={values:[],displayName:{}};return _.isArray(currentUserRoles)?((_.indexOf(currentUserRoles,"admin")>-1||_.indexOf(currentUserRoles,"master")>-1)&&(roles.values.push("user"),roles.displayName.user="User",roles.values.push("admin"),roles.displayName.admin="Admin"),_.indexOf(currentUserRoles,"master")>-1&&(roles.values.push("master"),roles.displayName.master="Master"),roles):roles}}}]);